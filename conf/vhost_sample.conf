<VirtualHost *:80>
    ServerName _sample_.gs.com

    DocumentRoot /data/web/_sample_/www

    LogLevel warn

    # logs
    ErrorLog /data/web/_sample_/logs/error_log
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" _sample__combined
    CustomLog /data/web/_sample_/logs/access_log _sample__combined

    # phpfpm/fastcgi
    # Here we catch the 'false' Location used to inexistent php5.external
    # and push it to the external FastCgi process via a socket
    # note: socket path is relative to FastCgiIpcDir
    # which is set in Main configuration /etc/httpd/conf.d/mod_fastcgi.conf
    <IfModule mod_fastcgi.c>
        # all .php files will be pushed to a php5-fcgi handler
        AddHandler php5-fcgi .php

        #action module will let us run a cgi script based on handler php5-fcgi
        Action php5-fcgi /data/web/_sample_/fcgi/php5__sample_.external

        # and we add an Alias to the fcgi location
        Alias /data/web/_sample_/fcgi/php5__sample_.external /php5__sample_.external

        # now we catch this cgi script which in fact does not exists on filesystem
        # we catch it on the url (Location)
        <Location /data/web/_sample_/fcgi/php5__sample_.external>
            # here we prevent direct access to this Location url,
            # env=REDIRECT_STATUS will let us use this fcgi-bin url
            # only after an internal redirect (by Action upper)
            Order Deny,Allow
            Deny from All
            Allow from env=REDIRECT_STATUS
        </Location>
        # now calling FPM
        FastCgiExternalServer /php5__sample_.external -socket /data/web/_sample_/fcgi/fpm__sample_.sock -appConnTimeout 30 -idle-timeout 60

    </IfModule>

    # Project directory
    # Various set of rules
    <Directory /data/web/_sample_/www>
        Order allow,deny
        Allow from all
        Options +FollowSymLinks -Indexes -Multiviews
        DirectoryIndex index.php
        ErrorDocument 404 /index.php
    </Directory>
</VirtualHost>
